function H = readbrir(filename)
% READBRIR  Read (binaural) room impulse response
%    H = READBRIR(FILENAME) reads the (binaural) room impulse response
%    generated by the external ROOMSIM program from file FILENAME and
%    returns it in the NxM cell array H, where N is the number of 
%    sources and M the number of receivers used in the simulation.
%    Each element of H is a structure describing a source-to-receiver
%    impulse response. If N==1 and M==1, H is reduced to a single 
%    structure.
%
%    See also ROOMSIM.EXE.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Author: Steven Schimmel, stevenmschimmel@gmail.com
% Copyright 2009, University of Zurich
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% This file is part of ROOMSIM.
%
% ROOMSIM is free software: you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation, either version 3 of the License, or
% (at your option) any later version. 
%
% ROOMSIM is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with ROOMSIM. If not, see <http://www.gnu.org/licenses/>.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

H = [];
fid = fopen(filename,'rb');
if fid==-1, fprintf('file ''%s'' not found\n',filename); return; end;
dd = dir(filename);
fprintf('Loading BRIR data dated %s...\n', dd.date);

N = fread(fid,2,'int32');
S = N(1); R = N(2);
H = cell(S,R);

for s=1:S,
    for r=1:R,
        H{s,r}.fs = fread(fid,1,'double');
        H{s,r}.nchannels = fread(fid,1,'int32');
        H{s,r}.nsamples = fread(fid,1,'int32');
        data = fread(fid,H{s,r}.nchannels*H{s,r}.nsamples,'double');
        H{s,r}.data = reshape(data,H{s,r}.nsamples,H{s,r}.nchannels);
    end;
end;
fclose(fid);
if numel(H)==1, H=H{1}; end;
